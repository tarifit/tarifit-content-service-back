name: JIRA to GitHub Automation

on:
  repository_dispatch:
    types: [jira-status-change]

jobs:
  create-branch-and-pr:
    runs-on: ubuntu-latest
    if: >
      (github.event.client_payload.issue.fields.status.name == 'In Progress' || 
       github.event.client_payload.webhookEvent == 'jira:issue_updated') &&
      contains(github.event.client_payload.issue.fields.labels.*.name, 'content-service')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PERSONAL_TOKEN }}
        fetch-depth: 0

    - name: Extract JIRA issue details
      id: jira
      run: |
        echo "issue_key=${{ github.event.client_payload.issue.key }}" >> $GITHUB_OUTPUT
        echo "summary=${{ github.event.client_payload.issue.fields.summary }}" >> $GITHUB_OUTPUT
        echo "description=${{ github.event.client_payload.issue.fields.description }}" >> $GITHUB_OUTPUT
        echo "status=${{ github.event.client_payload.issue.fields.status.name }}" >> $GITHUB_OUTPUT
        echo "BRANCH_NAME=feature/${{ github.event.client_payload.issue.key }}" >> $GITHUB_ENV

    - name: Check status transition to In Progress
      if: steps.jira.outputs.status == 'In Progress'
      run: echo "Issue moved to In Progress - proceeding with branch creation"

    - name: Create feature branch
      if: steps.jira.outputs.status == 'In Progress'
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        # Check if branch already exists
        if git ls-remote --heads origin ${{ env.BRANCH_NAME }} | grep -q ${{ env.BRANCH_NAME }}; then
          echo "Branch ${{ env.BRANCH_NAME }} already exists"
          exit 0
        fi
        
        git checkout -b ${{ env.BRANCH_NAME }}
        git commit --allow-empty -m "Initialize feature branch for ${{ steps.jira.outputs.issue_key }}"
        git push origin ${{ env.BRANCH_NAME }}

    - name: Create Pull Request
      if: steps.jira.outputs.status == 'In Progress'
      id: create-pr
      run: |
        # Check if PR already exists
        EXISTING_PR=$(curl -s -H "Authorization: Bearer ${{ secrets.PERSONAL_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls?head=tarifit:${{ env.BRANCH_NAME }}&state=open" | jq length)
        
        if [ "$EXISTING_PR" -gt 0 ]; then
          echo "PR already exists for branch ${{ env.BRANCH_NAME }}"
          exit 0
        fi
        
        PR_BODY=$(cat << 'EOF'
        ## JIRA Issue: ${{ steps.jira.outputs.issue_key }}
        
        **Summary:** ${{ steps.jira.outputs.summary }}
        **Status:** ${{ steps.jira.outputs.status }}
        
        ## Implementation Instructions for Claude Code
        
        ${{ steps.jira.outputs.description }}
        
        ---
        
        ### Claude Code Implementation Instructions
        
        **Repository:** ${{ github.repository }}
        **Branch:** ${{ env.BRANCH_NAME }}
        
        **Steps to complete:**
        1. Switch to branch: ${{ env.BRANCH_NAME }}
        2. Implement the requirements described above
        3. Follow all technical specifications and acceptance criteria
        4. Add appropriate unit tests
        5. Commit changes with descriptive messages
        6. Push commits to the branch
        
        **Important:** All work must be done in branch ${{ env.BRANCH_NAME }} and pushed to complete the task.
        
        **JIRA:** https://lyagoubisaad.atlassian.net/browse/${{ steps.jira.outputs.issue_key }}
        EOF
        )
        
        RESPONSE=$(curl -s -X POST \
          -H "Authorization: Bearer ${{ secrets.PERSONAL_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d "{
            \"title\": \"${{ steps.jira.outputs.issue_key }}: ${{ steps.jira.outputs.summary }}\",
            \"body\": $(echo "$PR_BODY" | jq -Rs .),
            \"head\": \"${{ env.BRANCH_NAME }}\",
            \"base\": \"master\"
          }" \
          "https://api.github.com/repos/${{ github.repository }}/pulls")
        
        PR_NUMBER=$(echo "$RESPONSE" | jq -r '.number')
        PR_URL=$(echo "$RESPONSE" | jq -r '.html_url')
        
        echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
        echo "PR_URL=$PR_URL" >> $GITHUB_ENV
        
        echo "Created PR #$PR_NUMBER: $PR_URL"

    - name: Add comment to JIRA
      if: steps.jira.outputs.status == 'In Progress' && env.PR_URL != ''
      run: |
        curl -X POST \
          -H "Authorization: Basic ${{ secrets.JIRA_AUTH }}" \
          -H "Content-Type: application/json" \
          -d "{
            \"body\": \"GitHub branch and PR created:\n- Branch: \`${{ env.BRANCH_NAME }}\`\n- PR: ${{ env.PR_URL }}\"
          }" \
          "https://lyagoubisaad.atlassian.net/rest/api/2/issue/${{ steps.jira.outputs.issue_key }}/comment"
